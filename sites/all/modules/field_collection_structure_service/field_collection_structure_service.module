<?php

/**
* Implements of hook_services_resources().
*/
function field_collection_structure_service_services_resources() {
  $api = array(
    'field_collection_structure' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieves fields for a single field collection type',
          'file' => array(
            'file' => 'inc',
            'module' => 'field_collection_structure_service',
          ),
          'callback' => '_field_collection_structure_service_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'type',
              'type' => 'string',
              'description' => 'The type of the entityform to get',
              'source' => array('path' => ''),
              'optional' => FALSE,
            ),
          ),
        ),
        'index' => array(
          'help' => 'List all field collection information.',
          'callback' => '_field_collection_structure_service_index',
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'page',
              'type' => 'string',
              'description' => '',
              'source' => array(
                'param' => 'page',
              ),
              'optional' => TRUE,
              'default value' => 0,
            ),
            array(
              'name' => 'parameters',
              'type' => 'array',
              'description' => '',
              'source' => 'param',
              'optional' => TRUE,
              'default value' => array(),
            ),
          ),
        ),
      ),
    ),
  );
  return $api;
}

/**
 * Callback for retrieving the fields resources.
 */
function _field_collection_structure_service_retrieve($bundle) {
  $entity_type = "field_collection_item";
  return entityform_structure_web_service_get_fields($entity_type, $bundle);
}

function _field_collection_structure_service_index($page, $parameters) {
  // Load user input to build the cache cid.
  global $user;
  $user_full = user_load($user->uid);
  $country_code = $user_full->field_pais['und'][0]['iso2'];
  $currlang = $user_full->language;

  // Build cid.
  $cid = "field_collection_item-{$country_code}-{$currlang}";
  // Get cached data of the current cid.
  $cached_data = cache_get($cid, 'cache_field_collection_structure_service');

  if (!$cached_data) {
    $form_fields = new stdClass();
    $info = entity_get_property_info('field_collection_item');

    foreach ($info['bundles'] as $name => $bundle) {
      // Display just the entityform bundle name.
      $form_fields->{$name} = _field_collection_structure_service_retrieve($name)[$name];
    }

    cache_set($cid, $form_fields, 'cache_field_collection_structure_service');
  }
  else {
    $form_fields = $cached_data->data;
  }

  return $form_fields;
}
